AWSTemplateFormatVersion: '2010-09-09'
Description: "VPC with public and private subnet, NACL, Security Group, IGW, NAT Gateway, and EC2 instances."

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PublicSubnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PrivateSubnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  ElasticIP:
    Type: AWS::EC2::EIP

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnet
      AllocationId: !GetAtt ElasticIP.AllocationId

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  PublicInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH access to public instances"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  PrivateSubnetNACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref MyVPC

  PrivateSubnetNACLInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateSubnetNACL
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 10.0.1.0/24 # Only allow traffic from the public subnet
      Egress: false

  PrivateSubnetNACLOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateSubnetNACL
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      Egress: true

  PrivateSubnetNACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      NetworkAclId: !Ref PrivateSubnetNACL

  PublicInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-01eb4eefd88522422  # Change this to a valid AMI ID in your region
      KeyName: CloudFormationKeyPair
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref PublicSubnet
          GroupSet:
            - !Ref PublicInstanceSG
      Tags:
        - Key: Name
          Value: PublicInstance

  PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-01eb4eefd88522422  # Change this to a valid AMI ID in your region
      KeyName: CloudFormationKeyPair
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeviceIndex: 0
          SubnetId: !Ref PrivateSubnet
          GroupSet:
            - !Ref PublicInstanceSG
      Tags:
        - Key: Name
          Value: PrivateInstance

Outputs:
  VPCId:
    Description: "VPC ID"
    Value: !Ref MyVPC
    Export:
      Name: !Sub "${AWS::StackName}-VPCId"

  PublicSubnetId:
    Description: "Public Subnet ID"
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnetId"

  PrivateSubnetId:
    Description: "Private Subnet ID"
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnetId"

  InternetGatewayId:
    Description: "Internet Gateway ID"
    Value: !Ref InternetGateway
    Export:
      Name: !Sub "${AWS::StackName}-InternetGatewayId"

  NatGatewayId:
    Description: "NAT Gateway ID"
    Value: !Ref NATGateway
    Export:
      Name: !Sub "${AWS::StackName}-NatGatewayId"

  ElasticIP:
    Description: "Elastic IP for NAT Gateway"
    Value: !Ref ElasticIP
    Export:
      Name: !Sub "${AWS::StackName}-ElasticIP"

  PublicInstanceId:
    Description: "Instance ID of the Public EC2 Instance"
    Value: !Ref PublicInstance
    Export:
      Name: !Sub "${AWS::StackName}-PublicInstanceId"

  PrivateInstanceId:
    Description: "Instance ID of the Private EC2 Instance"
    Value: !Ref PrivateInstance
    Export:
      Name: !Sub "${AWS::StackName}-PrivateInstanceId"

  PublicInstancePublicIP:
    Description: "Public IP of the Public EC2 Instance"
    Value: !GetAtt PublicInstance.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-PublicInstancePublicIP"

  PrivateInstancePrivateIP:
    Description: "Private IP of the Private EC2 Instance"
    Value: !GetAtt PrivateInstance.PrivateIp
    Export:
      Name: !Sub "${AWS::StackName}-PrivateInstancePrivateIP"

  PublicSecurityGroupId:
    Description: "Security Group ID for Public Instance"
    Value: !Ref PublicInstanceSG
    Export:
      Name: !Sub "${AWS::StackName}-PublicSecurityGroupId"

  PrivateSubnetNaclId:
    Description: "Network ACL ID for Private Subnet"
    Value: !Ref PrivateSubnetNACL
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnetNaclId"
